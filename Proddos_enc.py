#-------------------------------------------------#
# Obfuscate By Mr.GamingThanks To Black Coder Crush
# github  : https://github.com/clayhacker-max
# from Linux
# localhost : aarch64
# key : Asep-fA6bC2eA6tB8lX8
# date : Fri Jul 16 13:54:16 2021
#-------------------------------------------------#
#Compile By DNMODZ
#My Team : Black Coder Crush
import base64
exec(base64.b64decode(""))